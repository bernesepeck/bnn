name: Build and Deploy Common Workflow

on:
  workflow_call:
    inputs:
      frontend_service_name:
        required: true
        type: string
      directus_service_name:
        required: true
        type: string
      environment:
        required: true
        type: string
      frontend_url:
        required: true
        type: string
      backend_url:
        required: false
        type: string
      gcs_upload_directory:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            j0hngnn0n/bnn-frontend:${{ github.sha }}
            j0hngnn0n/bnn-frontend:latest
      
      - uses: shrink/actions-docker-extract@v3
        id: extract
        with:
          image: j0hngnn0n/bnn-frontend:${{ github.sha }}
          path: /usr/share/nginx/html
          destination: dist

      - name: Extract and Upload Source Maps to Sentry
        run: |
          SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
          VERSION=${{ github.sha }}
          curl -sL https://sentry.io/get-cli/ | bash
          ls -la
          cd ./dist
          # Upload source maps to Sentry
          sentry-cli sourcemaps --org ${{ secrets.SENTRY_ORG }} --project ${{ secrets.SENTRY_PROJECT }} inject .
          sentry-cli sourcemaps --org ${{ secrets.SENTRY_ORG }} --project ${{ secrets.SENTRY_PROJECT }} upload .
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      
      - name: Build and push Directus custom Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            j0hngnn0n/bnn-directus:${{ github.sha }}
            j0hngnn0n/bnn-directus:latest

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: 'Upload directus schema snapshot to gcs'
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: './backend/snapshots/snapshot-latest.yaml'
          destination: 'bnn-directus-snapshots/'

      - name: Deploy directus to Google Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          region: 'europe-west3'
          service: ${{ inputs.directus_service_name }}
          image: j0hngnn0n/bnn-directus:${{ github.sha }}
          flags: '--add-cloudsql-instances=bnn-app-413420:europe-west6:bnn-database'
          env_vars: |
            PUBLIC_URL=${{ inputs.backend_url }}
            KEY=${{ secrets.DIRECTUS_KEY }}
            SECRET=${{ secrets.DIRECTUS_SECRET }}
            APPLY_SNAPSHOT=true
            ADMIN_EMAIL=gannonline90@gmail.com
            ADMIN_PASSWORD=${{ secrets.DIRECTUS_ADMIN_PASSWORD }}
            CORS_ENABLED=true
            CORS_ORIGIN=${{ inputs.frontend_url }}
            CORS_METHODS=GET,POST,PATCH,DELETE
            CORS_ALLOWED_HEADERS=Content-Type,Authorization
            CORS_EXPOSED_HEADERS=Content-Range
            CONTENT_SECURITY_POLICY_DIRECTIVES__FRAME_SRC=${{ inputs.frontend_url }}
            EMAIL_TRANSPORT=smtp
            EMAIL_SMTP_HOST=mail.infomaniak.com
            EMAIL_SMTP_PORT=465
            EMAIL_SMTP_SECURE=true
            EMAIL_SMTP_AUTH=true
            EMAIL_SMTP_USER=info@beimnamennennen.ch
            EMAIL_SMTP_PASSWORD=${{ secrets.DIRECTUS_SMTP_PASSWORD }}
            EMAIL_FROM=info@beimnamennennen.ch
            DB_CLIENT=pg
            DB_CONNECTION_STRING=${{ secrets.DIRECTUS_DB_CONNECTION_STRING }}
            STORAGE_LOCATIONS=gcs
            STORAGE_GCS_DRIVER=gcs
            STORAGE_GCS_ROOT=${{ inputs.gcs_upload_directory }}
            STORAGE_GOOGLE_CREDENTIALS__PRIVATE_KEY=${{ secrets.GCP_SA_PRIVATE_KEY }}
            STORAGE_GOOGLE_CREDENTIALS__CLIENT_EMAIL=${{ secrets.GCP_SA_CLIENT_EMAIL }}
            STORAGE_GCS_BUCKET=directus-uploads
            PRESSURE_LIMITER_ENABLED=false

      - name: 'Deploy frontend to Google Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ inputs.frontend_service_name }}
          image: 'j0hngnn0n/bnn-frontend:${{ github.sha }}'
          region: 'europe-west3'
          env_vars: |
            API_URL=${{ inputs.backend_url }}
            ENV=${{ inputs.environment }}
